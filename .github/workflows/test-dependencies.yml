name: Test Dependencies

on:
  workflow_dispatch:
    inputs:
      dependency-type:
        description: 'Dependency type to test'
        required: true
        type: choice
        options:
          - python
          - node
          - docker
          - terraform
      pr-number:
        description: 'PR number to test (optional)'
        required: false
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.pr-number && format('refs/pull/{0}/head', github.event.inputs.pr-number) || github.ref }}

      # Python testing
      - name: Set up Python
        if: ${{ github.event.inputs.dependency-type == 'python' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Test Python dependencies
        if: ${{ github.event.inputs.dependency-type == 'python' }}
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          elif [ -f pyproject.toml ]; then
            pip install -e .
          fi
          
          # Run unit tests
          if [ -d tests ]; then
            python -m pytest -xvs tests/
          fi
          
          # Run safety check
          pip install safety
          safety check

      # Node.js testing
      - name: Set up Node.js
        if: ${{ github.event.inputs.dependency-type == 'node' }}
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Test Node.js dependencies
        if: ${{ github.event.inputs.dependency-type == 'node' }}
        run: |
          if [ -f package.json ]; then
            npm ci
            npm audit
            npm test
          fi

      # Docker testing
      - name: Set up Docker
        if: ${{ github.event.inputs.dependency-type == 'docker' }}
        uses: docker/setup-buildx-action@v3
          
      - name: Test Docker build
        if: ${{ github.event.inputs.dependency-type == 'docker' }}
        run: |
          if [ -f Dockerfile ]; then
            docker build -t test-image .
          fi

      # Terraform testing
      - name: Set up Terraform
        if: ${{ github.event.inputs.dependency-type == 'terraform' }}
        uses: hashicorp/setup-terraform@v3
          
      - name: Validate Terraform files
        if: ${{ github.event.inputs.dependency-type == 'terraform' }}
        run: |
          if [ -d infrastructure ]; then
            find infrastructure -name "*.tf" -exec dirname {} \; | sort -u | while read dir; do
              cd "$dir"
              terraform init -backend=false
              terraform validate
              cd - > /dev/null
            done
          fi
          
      - name: Generate report
        run: |
          echo "## Dependency Testing Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Tests executed for: ${{ github.event.inputs.dependency-type }}" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ github.event.inputs.pr-number }}" ]; then
            echo "ðŸ“Œ PR: #${{ github.event.inputs.pr-number }}" >> $GITHUB_STEP_SUMMARY
          fi
